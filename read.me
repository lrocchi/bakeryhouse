Aggiunto componente per Logentries, addon di Heroku

npm install le_node --save

Add the following at the top of the files you wish to log from:

var Logger = require('le_node');
var log = new Logger({
  token:'6c122f92-c9b1-48bb-8ea6-c92c72e4ece2'
});


Then: Insert Logging Code

// level specific methods like 'info', 'debug', etc.
log.info("I'm a Lumberjack and I'm OK")

// generic log method, also accepts JSON entries
log.log("debug", {sleep:"all night", work:"all day"})




*******************************************************************************************************************************************
*******************************************************************************************************************************************
npm install excel4node
*******************************************************************************************************************************************

// Require library
var excel = require('excel4node');

// Create a new instance of a Workbook class
var workbook = new excel.Workbook();

// Add Worksheets to the workbook
var worksheet = workbook.addWorksheet('Sheet 1');
var worksheet2 = workbook.addWorksheet('Sheet 2');

// Create a reusable style
var style = workbook.createStyle({
  font: {
    color: '#FF0800',
    size: 12
  },
  numberFormat: '$#,##0.00; ($#,##0.00); -'
});

// Set value of cell A1 to 100 as a number type styled with paramaters of style
worksheet.cell(1,1).number(100).style(style);

// Set value of cell B1 to 300 as a number type styled with paramaters of style
worksheet.cell(1,2).number(200).style(style);

// Set value of cell C1 to a formula styled with paramaters of style
worksheet.cell(1,3).formula('A1 + B1').style(style);

// Set value of cell A2 to 'string' styled with paramaters of style
worksheet.cell(2,1).string('string').style(style);

// Set value of cell A3 to true as a boolean type styled with paramaters of style but with an adjustment to the font size.
worksheet.cell(3,1).bool(true).style(style).style({font: {size: 14}});

workbook.write('Excel.xlsx');

*******************************************************************************************************************************************
*******************************************************************************************************************************************



*******************************************************************************************************************************************
*******************************************************************************************************************************************
npm install nodemailer --save
*******************************************************************************************************************************************

var mailer = require('nodemailer');
mailer.SMTP = {
    host: 'host.com', 
    port:587,
    use_authentication: true, 
    user: 'you@example.com', 
    pass: 'xxxxxx'
};
Then read a file and send an email :

fs.readFile("./attachment.txt", function (err, data) {

    mailer.send_mail({       
        sender: 'sender@sender.com',
        to: 'dest@dest.com',
        subject: 'Attachment!',
        body: 'mail content...',
        attachments: [{'filename': 'attachment.txt', 'content': data}]
    }), function(err, success) {
        if (err) {
            // Handle error
        }

    }
});


*******************************************************************************************************************************************
*******************************************************************************************************************************************
ng build --prod --aot --sm





db.getCollection('costs').find({ref_date:{$gte : ISODate("2018-01-31T00:00:00.000Z"), $lte: ISODate("2018-02-02T00:00:00.000Z")}})


db.getCollection('costs').aggregate( [
    {$match: {ref_date:{$gte : ISODate("2017-12-01T00:00:00.000Z"), $lte: ISODate("2018-01-01T00:00:00.000Z")}, "fullType.nome":"Food"}},
    {$group: { _id: {"ref_date" : "$ref_date","descrizione":"$descrizione"}, "totale": {$sum: "$valore"}}}    
])



db.getCollection('costs').aggregate( [
    {$match: {ref_date:{$gte : ISODate("2017-12-01T00:00:00.000Z"), $lte: ISODate("2018-01-01T00:00:00.000Z")}, "fullType.nome":"Food"}},
    {$group: { _id: "$descrizione", "totale": {$sum: "$valore"}}}    
])